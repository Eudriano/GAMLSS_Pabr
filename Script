# Eudriano Costa

# R code used in the article " Costa et al. (2022). Effects of biological and environmental factors on the variability 
# of Paralonchurus brasiliensis (Sciaenidae) density: An GAMLSS application"
# This code was used to apply Generalized Additive Models for Location, Scale, and Shape (GAMLSS) in order to analyze
# the relationship between the response variable fish density (Dens) and several explanatory variables including biomass,
# RI, HSI, K, Sex ratio (Sexrat), temperature (Temp), salinity (Sal), organic matter (OM), mean grain size of the sediment 
# (φ), and depth. The analysis also takes into account region and month as factors.

# Costa, E.F.S., Teixeira, G.M., Freire, F.A.M., Dias, J.F., Fransozo, A. (2022). Effects of biological and environmental
# factors on the variability of Paralonchurus brasiliensis (Sciaenidae) density: An GAMLSS application. Journal of Sea 
# Research 183, 102203. doi: https://doi.org/10.1016/j.seares.2022.102203

###################################################################################################################
#########################   FULL(0) pabr dataset= Paralonchurus brasiliensis   ####################################
###################################################################################################################
setwd("~/efc/2021_SUBMITTED_Biological factors as proxies of/2021_SUBMITTED_J Sea Research/Script_Figuras")
datapabrM<-read.csv("Data_Pabr_Dens.csv",dec=".",sep=";",header=T)
attach(datapabrM)
library("gamlss")
library("car")
str(datapabrM)
#edit(datapabrM)
##############################Binary GAMLSS for negative and positive stations (0- values) -- Book- GAMLSS pag 211
tiff("Probability with negative stations.tiff", width = 6, height = 5.5,units = 'in', res=300)

datapabrM = na.omit(datapabrM)
pabrm1<- gamlss(Bin~pb(Depth), data=datapabrM, family=BI)
plot(Bin~Depth, data=datapabrM, type="n",xlab="Depth (m)", ylab="Estimated probability",lwd=2,cex.lab=1.3,font.lab=1)
points(datapabrM$Bin~jitter(datapabrM$Depth), pch="|", col="blue") 
      with (datapabrM, lines(fitted(pabrm1)[order(Depth)]~Depth[order(Depth)],col="red"))
summary(pabrm1)

dev.off()
############################## creating another dataframe with no negative stations, i.e. zero values ################## 
pabr1<-datapabrM[apply(datapabrM!=0, 1, all),] # zero values have been removed 
pabr1= na.omit(pabr1)
attach(pabr1)
pabr1<-transform(pabr1, Transec = as.factor(Transec))
pabr1<-transform(pabr1, Month_ = as.factor(Month_))
str(pabr1)

############################################ Matrix Corr
library("gamlss.dist")
data("pabr1")
with(pabr1, plot(data.frame(DensT,K,HSI,RI,Sexrat,BT,BS,Phi,OM,Depth)))
################################# histogramas de freuencia que da variavel dependente que estima a densidade de probabilidade de forma nao parametrica e sajusta a distribuição que suspeitamos ser a mais adequada

tiff("Plots_Dist.tiff", width = 6, height = 5.5,units = 'in', res=600)
par(no.readonly = TRUE)
par(mfrow = c(2,4))
par(mar = c(3.5,3.5,6,0.5))#outer margin: bottom, left, top and right side
par(mgp = c(2, 0.5, 0))#axis title, axis labels and axis line default c(3,1,0) 
layout.show(8)

histDist(DensT,family = LOGNO, main="Log normal", ylim=c(0,0.07), xlab = "Fish density", ylab = NULL,line.wd = 2,line.ty = 1,
         col.hist="white",border.hist="black", line.col = "black", col.main =  "black",col.lab="black", col.axis="black",fg.hist= "black",data=pabr1)
histDist(DensT,family = GA,main="Gamma", ylim=c(0,0.07),xlab = "Fish density", ylab = NULL,line.wd = 2,line.ty = 1, 
         col.hist="white",border.hist="black", line.col = "black", col.main =  "black",col.lab="black", col.axis="black",fg.hist= "black",data=pabr1)
histDist(DensT,family = WEI, main="Weibull",ylim=c(0,0.07),xlab = "Fish density", ylab = NULL,line.wd = 2,line.ty = 1, 
         col.hist="white",border.hist="black", line.col = "black", col.main =  "black",col.lab="black", col.axis="black",fg.hist= "black",data=pabr1)
histDist(DensT,family = WEI3, main="Weibull (mean)",ylim=c(0,0.08), xlab = "Fish density", ylab = NULL,line.wd = 2,line.ty = 1, 
         col.hist="white",border.hist="black", line.col = "black", col.main =  "black",col.lab="black", col.axis="black",fg.hist= "black",data=pabr1)
histDist(DensT,family = BCT, main="Box-cox t",ylim=c(0,0.07), xlab = "Fish density", ylab = NULL,line.wd = 2,line.ty = 1, 
         col.hist="white",border.hist="black", line.col = "black", col.main =  "black",col.lab="black", col.axis="black",fg.hist= "black",data=pabr1)
histDist(DensT,family = NO, main="Normal",ylim=c(0,0.07), xlab = "Fish density", ylab = NULL,line.wd = 2,line.ty = 1, 
         col.hist="white",border.hist="black", line.col = "black", col.main =  "black",col.lab="black", col.axis="black",fg.hist= "black",data=pabr1)
histDist(DensT,family = NOF,main="Normal family",ylim=c(0,0.07), xlab = "Fish density", ylab = NULL,line.wd = 2,line.ty = 1, 
         col.hist="white",border.hist="black", line.col = "black", col.main =  "black",col.lab="black", col.axis="black",fg.hist= "black",data=pabr1)

dev.off()

######################################################## GAMLSS ###################################################
###################################################################################################################
######################################## VIF- Multicollinearity ###################################################
###################################################################################################################
# VIF todas as variaveis
modVIF1<-(lm(DensT~Sexrat+RI+K+HSI+BT+BS+OM+Phi,data=pabr1)) #acima de 3 = excluir
vround<-vif(modVIF1)
round(vround, digits = 2)

#Ver https://rstudio-pubs-static.s3.amazonaws.com/118082_4777e197a79c4135857444bbcca879b7.html
library(usdm)
vifcor(pabr1[,c(15:17,19,30,32,34,35:36)], th=0.4)# Testar Modelos assim

tiff("PairPlots.tiff", width = 6, height = 5.5,units = 'in', res=600)
par(no.readonly = TRUE)
par(mfrow = c(1,1))
par(mar = c(1.5,3,8.5,0.5))#outer margin: bottom, left, top and right side
par(mgp = c(1.8,0.5, 0))#axis title, axis labels and axis line default c(3,1,0) 
layout.show(1)
pabr1Mat<-pabr1[,c(15:17,32,34,35:36)] # dens= 10, biomass 19 RI =
pabr1Mat

library("PerformanceAnalytics")
chart.Correlation(pabr1Mat, method="spearman",histogram=TRUE, pch=19)

dev.off()

r <- cor(pabr1Mat, use="complete.obs")
round(r,2)
library(ggplot2)
library(ggcorrplot)
ggcorrplot(r)

tiff("Coplots2.tiff", width = 6, height = 5.5,units = 'in', res=600)
library(corrplot)
library(RColorBrewer)
corrplot(r, type="upper", order="hclust",addCoef.col = 'black',
         col=brewer.pal(n=8, name="RdYlBu"))
dev.off()

library(GGally)
ggpairs(pabr1Mat, 
        upper = list(continuous = "points"))

###################################################################################################################
######################################## Testando a distribuicao da variavel resposta #############################
###################################################################################################################
modGamma<-gamlss(DensT ~ 1, family=GA, trace=F)
modNormal<-gamlss(DensT ~ 1, family=NO, trace=F)
modWeibull1<-gamlss(DensT ~ 1, family=WEI,trace=F)
modWeibull3<-gamlss(DensT ~ 1, family=WEI3,trace=F)
modLogNorm <-gamlss(DensT ~ 1, family=LOGNO,trace=F)
modFamNorm <-gamlss(DensT ~ 1, family=NOF, trace=F)
modBCT <-gamlss(DensT ~ 1, family=BCT, trace=F)
# GAIC Test to select the best distribution
modGaic<-GAIC(modGamma, modNormal, modLogNorm, modFamNorm, modWeibull1, modWeibull3,modBCT) # AIC test
modGaic

###################################################################################################################
#################### Achando grau de liberdade para cada umas das variveis explicativas ###########################
###################################################################################################################

modx<-quote(gamlss(DensT~cs(K, df=p[1])+ cs(RI, df=p[2])+ cs(HSI, df=p[3])+cs(BT,df=p[4]) + cs(BS, df=p[5])+ cs(OM, df=p[6])+ cs(Phi, df=p[7])+ cs(Sexrat, df=p[8])+ cs(Juv, df=p[9]),family=LOGNO)) 
op<-find.hyper(model=modx, parameters=c(3,3,3,3,3,3,3,3,3), lower=c(1,1,1,1,1,1,1,1,1), upper = c(30, 30, 30,30, 30,30, 30, 30,30),trace=FALSE)
op

##################################################################################################################
##################################### GAMLSS MOEDELS #############################################################
##################################################################################################################
# Global model
mod0<-(gamlss(DensT~cs(BiomassT,df=2)+cs(HSI,df=3)+cs(K,df=3)+cs(Sexrat,df=1)+cs(BT,df=1)+cs(BS,df=2)+cs(OM,df=3)+cs(Phi,df=4)+cs(Depth,df=2.5)+Region+Month,family=LOGNO))
predict(mod0,what="sigma", type="response")
predict(mod0,what="mu", type="response")

# Abiotic Models
mod1<-(gamlss(DensT~cs(BT,df=1)+cs(BS,df=2)+cs(OM,df=3)+cs(Phi,df=4)+cs(Depth,df=3)+Region+Month,family=LOGNO))
mod2<-(gamlss(DensT~cs(BT,df=1)+cs(BS,df=2)+cs(OM,df=3)+cs(Phi,df=4)+cs(Depth,df=3)+Region,family=LOGNO))
mod3<-(gamlss(DensT~cs(BT,df=1)+cs(BS,df=2)+cs(OM,df=3)+cs(Phi,df=4)+cs(Depth,df=3),family=LOGNO))
mod4<-(gamlss(DensT~cs(BT,df=1)+cs(BS,df=2)+cs(Depth,df=3)+Region,family=LOGNO))
mod5<-(gamlss(DensT~cs(BT,df=1)+cs(BS,df=2)+cs(Depth,df=3),family=LOGNO))
mod6<-(gamlss(DensT~cs(OM,df=3)+cs(Phi,df=4)+cs(Depth,df=3)+Region,family=LOGNO))
mod7<-(gamlss(DensT~cs(OM,df=3)+cs(Phi,df=4)+cs(Depth,df=3),family=LOGNO))
GAIC(mod0,mod1, mod2, mod3, mod4, mod5, mod6 , mod7) 
# Biotic Models
mod8<-(gamlss(DensT~cs(K,df=3)+cs(HSI,df=3)+cs(Sexrat,df=1)+cs(BiomassT,df=6)+Region+Month,family=LOGNO))
mod9<-(gamlss(DensT~cs(K,df=3)+cs(HSI,df=3)+cs(Sexrat,df=1)+cs(BiomassT,df=6)+Region,family=LOGNO))
mod10<-(gamlss(DensT~cs(K,df=3)+cs(HSI,df=3)+cs(Sexrat,df=1)+cs(BiomassT,df=6),family=LOGNO))
mod11<-(gamlss(DensT~cs(K,df=3)+cs(HSI,df=3),family=LOGNO))
mod12<-(gamlss(DensT~cs(Sexrat,df=1)+cs(BiomassT,df=6),family=LOGNO))
rGAIC<-GAIC(mod0,mod1,mod2,mod3,mod4,mod5,mod6,mod7,mod8, mod9, mod10, mod11,mod12) 
round(rGAIC, digits = 1)
###################################################################################################################
#################### Extracting fitted values from mod0 MU & SIGMA ################################################
###################################################################################################################
tiff("Mu parameter.tiff", width = 6, height = 5.5,units = 'in', res=600)
par(no.readonly = TRUE)
par(mfrow = c(3,3))
par(mar = c(3.4,3,1.0,0.5))#outer margin: bottom, left, top and right side
par(mgp = c(2,0.8, 0))#axis title, axis labels and axis line default c(3,1,0) 
layout.show(9)

plot(BiomassT, fitted(mod0,"mu")) #will plot the fitted values of µ distribution parameter against x 
plot(HSI, fitted(mod0,"mu"))
plot(K, fitted(mod0,"mu"))
plot(Sexrat, fitted(mod0,"mu"))
plot(BT, fitted(mod0,"mu"))
plot(BS, fitted(mod0,"mu"))
plot(OM, fitted(mod0,"mu"))
plot(Phi, fitted(mod0,"mu"))
plot(Depth, fitted(mod0,"mu"))
#The constant estimated scale parameter (the standard deviation of the normal distribution in this case) can be obtained:
fitted(mod0,"sigma")[1] #where [1] indicates the first element of the vector
fitted(mod0,"mu")[1]
predict(mod0,what='sigma',type='response')

dev.off()
###################################################################################################################
####################  Modelling both µ and ??   ####################################################################
###################################################################################################################

edfAll(mod0)#is used to obtain the effective degrees of freedom for all parameters

###################################################################################################################
####################       Diagnostic plots    ####################################################################
###################################################################################################################
#Once a GAMLSS model is fitted, it is important to assess the adequacy of the fitted model by examining the model residuals

# Plots of Residuals 
tiff("ResidualPlots.tiff", width = 6, height = 5.5,units = 'in', res=300)
plot(mod0)#shows plots of the residuals: (top left) against the fitted values of µ; (top right) against
          #an index (i.e. case number); (bottom left) a nonparametric kernel density estimate; (bottom
          #right) a normal Q-Q plot.
dev.off()

# Worm Plots  
wp(mod0)         #The worm plot (see Section ??) is a de-trended normal Q-Q plot of the residuals. Model
                 #inadequacy is indicated when many points plotted lie outside the (dotted) point-wise 95%
                 #confidence bands

wp(mod0, ylim.all=3)
title("Ximboca") 

#Plotting mu & sigma
tiff("Mu e sigma.tiff", width = 6, height = 5.5,units = 'in', res=600)
par(no.readonly = TRUE)
par(mfrow = c(3,3))
par(mar = c(3.4,3,1.0,0.5))#outer margin: bottom, left, top and right side
par(mgp = c(2,0.8, 0))#axis title, axis labels and axis line default c(3,1,0) 
layout.show(9)

fittedPlot(mod0, x=pabr1$BiomassT, line.type = TRUE)#plot of the smooth fitted values for all the parameters
fittedPlot(mod0, x=pabr1$HSI, line.type = TRUE)
fittedPlot(mod0, x=pabr1$K, line.type = TRUE)
fittedPlot(mod0, x=pabr1$Sexrat, line.type = TRUE)
fittedPlot(mod0, x=pabr1$BT, line.type = TRUE)
fittedPlot(mod0, x=pabr1$BS, line.type = TRUE)
fittedPlot(mod0, x=pabr1$OM, line.type = TRUE)
fittedPlot(mod0, x=pabr1$Phi, line.type = TRUE)
fittedPlot(mod0, x=pabr1$Depth, line.type = TRUE)

dev.off()

#Centile fan plot
tiff("Centile fan plot.tiff", width = 6, height = 5.5,units = 'in', res=600)
par(no.readonly = TRUE)
par(mfrow = c(3,3))
par(mar = c(3.4,3,1.0,0.5))#outer margin: bottom, left, top and right side
par(mgp = c(2,0.8, 0))#axis title, axis labels and axis line default c(3,1,0) 
layout.show(9)
                                                                     # Legend
centiles.fan(mod0, xvar=pabr1$BiomassT, cent=c(3,10,25,50,75,90,97), #Centile fan plot for the m6 model showing the 3%, 10%, 25%, 50%, 75%, 90% and
             colors="terrain",ylab="Density", xlab="Biomass (g)",main="") #97% centiles for the fitted LOGNO distribution
centiles.fan(mod0, xvar=pabr1$HSI, cent=c(3,10,25,50,75,90,97), 
             colors="terrain",ylab="Density", xlab="Hepatosomatic index",main="")               
centiles.fan(mod0, xvar=pabr1$K, cent=c(3,10,25,50,75,90,97), 
             colors="terrain",ylab="Density", xlab="Condition factor",main="")  
centiles.fan(mod0, xvar=pabr1$Sexrat, cent=c(3,10,25,50,75,90,97), 
             colors="terrain",ylab="Density", xlab="Sex ratio",main="")  
centiles.fan(mod0, xvar=pabr1$BT, cent=c(3,10,25,50,75,90,97), 
             colors="terrain",ylab="Density", xlab="Temperature",main="")  
centiles.fan(mod0, xvar=pabr1$BS, cent=c(3,10,25,50,75,90,97), 
             colors="terrain",ylab="Density", xlab="Salinity",main="")  
centiles.fan(mod0, xvar=pabr1$OM, cent=c(3,10,25,50,75,90,97), 
             colors="terrain",ylab="Density", xlab="Organic matter",main="")  
centiles.fan(mod0, xvar=pabr1$Phi, cent=c(3,10,25,50,75,90,97), 
             colors="terrain",ylab="Density", xlab="Phi",main="")  
centiles.fan(mod0, xvar=pabr1$Depth, cent=c(3,10,25,50,75,90,97),
             colors="terrain",ylab="Density", xlab="Depth (m)",main="")  

dev.off()

# Centile fan plot for the mod0 model showing the 3%, 10%, 25%, 50%, 75%, 90% and 97% centiles for the fitted LOGNO distribution
library(gamlss.util)       # NÂO FOCIU LEGAM COM ESSA DISTRIBUIÇÂO
library(colorspace)
plotSimpleGamlss(DensT,BiomassT, model=mod0, data=pabr1, val=10, N=1000, ylim=c(0,70), family= LOGNO,
                 cols=heat_hcl(100))
plotSimpleGamlss(DensT,HSI, model=mod0, data=pabr1, val=10, N=1000, ylim=c(0,70),
                 cols=heat_hcl(100))
#                              ......

###################################################################################################################
####################          OUT PUT          ####################################################################
###################################################################################################################
#Significance of smoothing terms
drop1(mod0) #melhor

summary(mod0)
#provides (standard error based) confidence intervals for the the fitted coefficients
confint(mod0)
# ????
acfResid(mod0)
histDist(mod0)

###################################################################################################################
####################          TERM PLOT- FINAL ####################################################################
###################################################################################################################

tiff("TermPlotsLOGNO.tiff", width = 6, height = 5.5,units = 'in', res=600)

par(no.readonly = TRUE)
par(mfrow = c(3,4))
par(mar = c(3.4,3,1.0,0.5))#outer margin: bottom, left, top and right side
par(mgp = c(2,0.8, 0))#axis title, axis labels and axis line default c(3,1,0) 
#par(oma = c(1.5,2.8,1.5,0)) 
layout.show(12)
term.plot(mod0, se = T, scheme = c("lines"),col.res = rgb(0, 1, 0,max = 255, alpha = 100, names = "gray"),col.rug = "black", col.term = "black",col.se = "red",
          col.shaded = "gray",partial = T,lwd.se = 1.5,lwd.term=1.8, rug=TRUE,ylim = "common") #pages=1 #rgb(0, 0, 255, max = 255, alpha = 0.4, names = "blue50") transparente
wp(mod0)

dev.off()

###################################################################################################################
####################          mu and sigma - LOGNO ################################################################
###################################################################################################################
# tentativa de analisar os dois paramatros da distribuição LOGNO-local and scale
Res_mod<-residuals (mod0)
plot(Res_mod)
fitted(mod0)
Res_DensT<-DensT-fitted(mod0)#How come this aren't the residuals?
plot(Res_DensT)

tiff("Local and scale param.tiff", width = 6, height = 5.5,units = 'in', res=600)
par(no.readonly = TRUE)
par(mfrow = c(1,2))
par(mar = c(3.4,3,1.0,0.5))
par(mgp = c(2,0.8, 0)) 
layout.show(2)
fit_mu<-fitted(mod0, "mu")
fit_sig<-fitted(mod0, "sigma")
plot(fit_mu,ylab="Fitted values from mod0 (mu parameter)")
plot(fit_sig,ylab="Fitted values from mod0 (sigma parameter)")
formula(mod0,"mu")
dev.off()


tiff("mu_plot.tiff", width = 6, height = 5.5,units = 'in', res=300)
pdf.plot(mod0,min=0, max=15, step=.1) # mu and sigma
dev.off()

###################################################################################################################
####################          generalised R-squared of Nagelkerke (1991)  #########################################
###################################################################################################################
Rsq(mod0)
Rsq(mod1)
Rsq(mod2)
Rsq(mod3)
Rsq(mod4)
Rsq(mod5)
Rsq(mod6)
Rsq(mod7)
Rsq(mod8)
Rsq(mod9)
Rsq(mod10)
Rsq(mod11)
Rsq(mod12)


term.plot(mod0, pages=1, what="sigma", ask=FALSE)
drop1(mod0, what="sigma")


#################################################  END for the manuscript    ####################################

###################################################################################################################
####################         Supporting Materials  ################################################################
###################################################################################################################

###############################  BoxPlots#########################################################
library(ggplot2)
library(tidyr)
library(dplyr)
library (lemon)
setwd("~/efc/2021_SUBMITTED_Biological factors as proxies of/2021_SUBMITTED_J Sea Research/Script_Figuras")
Biomass_n<-read.csv("Biomass_n.csv",dec=".",sep=";",header=T)
attach(Biomass_n)

###############################################################################
############  N_total/Density/Biomass ~ Month + Depth  ########################

SubUba<-Biomass_n[1:59,c("Regions","Month","BiomassT","N_total","Subs","Transec","DensT")]
SubCar<-Biomass_n[60:118,c("Regions","Month","BiomassT","N_total","Subs","Transec","DensT")]

#·--------------------- New figures BIOTICS
Biomass_n1<-Biomass_n[,-7]# delete sub

DataBioLong1<-pivot_longer(Biomass_n1, -c(Regions,Month,Month_,Season,Transec), 
                         values_to = "BioValues", names_to = "BioVar")
DataBioLong1

DataBioLong<-transform(DataBioLong1, Regions = as.factor(Regions),
                   Month_ = as.factor(Month_),
                   Transec = as.factor(Transec),
                   BioVar = as.factor(BioVar),
                   BioValues = as.numeric(BioValues))

DataBioLong$Month_ <- factor(DataBioLong$Month_ , levels = c("Jan",
                                                             "Feb",
                                                             "Mar",
                                                             "Apr",
                                                             "May",
                                                             "Jun",
                                                             "Jul",
                                                             "Aug",
                                                             "Sep",
                                                             "Oct",
                                                             "Nov",
                                                             "Dec"))
Names_var <- c(
  'N_total'="Total number of individuals",
  'BiomassT'="Total biomass (g)",
  'DensT'="Density (fish/m2)*1000" )
#reorder plots
DataBioLong$facetOerder = factor(DataBioLong$BioVar, levels = c("N_total",
                                                                "DensT",
                                                                "BiomassT"))                                       
str(DataBioLong)

#----------------------------- ~ Month ----------------------------------------#
load("SuppData.RData")
BioVar_Month<-ggplot(DataBioLong, aes(x=Month_, y=BioValues, fill=Regions)) + 
  geom_boxplot() +#
  scale_fill_manual(values = c("white", "gray55"),
                    labels = c("Ubatuba (n= 12643)", "Caraguatatuba (n= 17166)"))+
  ylab("")+
  xlab("")+
  theme(axis.text=element_text(size=12),
        legend.key=element_blank(), 
        axis.text.x = element_text(colour = "black", size = 12, face = "plain", angle = 360, vjust = 1, hjust = 0.5), 
        axis.text.y = element_text(colour = "black", face = "plain", size = 10), 
        legend.text = element_text(size = 10, face ="plain", colour ="black"), 
        legend.title = element_text(size = 10, face = "plain"), panel.background = element_blank(), 
        panel.border = element_rect(colour = "black", fill = NA, size = 0.5), 
        legend.position = "top", panel.grid.major.y = element_line(colour = "grey93"),
        panel.grid.minor.y = element_line(colour = "grey93"),
        strip.text = element_text(size = 12)) +  
  facet_grid(facetOerder ~ ., scale="free",labeller = as_labeller(Names_var)) +
  #facet_wrap(~facetOerder, scale="free", ncol = 1,labeller = as_labeller(Names_var))+
  theme(legend.direction = "vertical")+
  guides(fill=guide_legend(""))+# legend title
  coord_capped_cart(bottom='both', left='both')+
  theme_bw() + 
  theme(panel.border=element_blank(), axis.line=element_line(),
        legend.position = "top",#c(0.79, 0.96),
        legend.background = element_rect(fill = NA, color = NA),
        legend.key = element_rect(fill = NA, color = NA),
        legend.key.size = unit(0.7, "cm"))

BioVar_Month

ggsave(filename = "./Figures/BioVar_Month.png", 
       plot = BioVar_Month,
       units = "cm", width = 15, height = 15, dpi = 600)

#----------------------------- ~ Depth ----------------------------------------#
load("SuppData.RData")

BioVar_Depth<-ggplot(DataBioLong, aes(x=Transec, y=BioValues, fill=Regions)) + 
  geom_boxplot() + #
  scale_fill_manual(values = c("white", "gray55"),
                    labels = c("Ubatuba (n= 12643)", "Caraguatatuba (n= 17166)"))+
  ylab("")+
  xlab("")+
  theme(axis.text=element_text(size=12),
        legend.key=element_blank(), 
        axis.text.x = element_text(colour = "black", size = 12, face = "plain", angle = 360, vjust = 1, hjust = 0.5), 
        axis.text.y = element_text(colour = "black", face = "plain", size = 10), 
        legend.text = element_text(size = 10, face ="plain", colour ="black"), 
        legend.title = element_text(size = 10, face = "plain"), panel.background = element_blank(), 
        panel.border = element_rect(colour = "black", fill = NA, size = 0.5), 
        legend.position = "top", panel.grid.major.y = element_line(colour = "grey93"),
        panel.grid.minor.y = element_line(colour = "grey93"),
        strip.text = element_text(size = 12)) +  
  facet_grid(facetOerder ~ ., scale="free",labeller = as_labeller(Names_var)) +
  #facet_wrap(~facetOerder, scale="free", ncol = 1,labeller = as_labeller(Names_var))+
  theme(legend.direction = "vertical")+
  guides(fill=guide_legend(""))+# legend title
  coord_capped_cart(bottom='both', left='both')+
  theme_bw() + 
  theme(panel.border=element_blank(), axis.line=element_line(),
        legend.position = "top",#c(0.79, 0.96),
        legend.background = element_rect(fill = NA, color = NA),
        legend.key = element_rect(fill = NA, color = NA),
        legend.key.size = unit(0.7, "cm"))

BioVar_Depth

ggsave(filename = "./Figures/BioVar_Depth.png", 
       plot = BioVar_Depth,
       units = "cm", width = 15, height = 15, dpi = 600)


#---------------------------    / /     ---------------------------------------#

################################################################################
###############   Condition indices ~ Month + Depth   ##########################
library(ggplot2)
library(tidyr)
library(dplyr)
library (lemon)

setwd("~/efc/2021_SUBMITTED_Biological factors as proxies of/2021_SUBMITTED_J Sea Research/Script_Figuras")
CondInd<-read.csv("Size_index2.csv",dec=".",sep=";",header=T)
attach(CondInd)

CondInd2<-CondInd %>% filter(str_detect(Sex, "Adults|JUveniles"))
summary(CondInd2)

str(CondInd2)
CondInd1<-CondInd2[,c("Region","Month_","Season","Trans",
                     "SL","TW","HSI","K","RI")]# Filtering


DataCondLong1<-pivot_longer(CondInd1, -c(Region,Month_,Trans,Season), 
                          values_to = "CondValues", names_to = "CondVar")
DataCondLong1
str(DataCondLong1)
DataCondLong<-transform(DataCondLong1, Region = as.factor(Region),
                       Month_ = as.factor(Month_),
                       Season = as.factor(Season),
                       Trans = as.factor(Trans),
                       CondVar = as.factor(CondVar),
                       CondValues = as.numeric(CondValues))



DataCondLong$Month_ <- factor(DataCondLong$Month_ , levels = c("Jan",
                                                             "Feb",
                                                             "Mar",
                                                             "Apr",
                                                             "May",
                                                             "Jun",
                                                             "Jul",
                                                             "Aug",
                                                             "Sep",
                                                             "Oct",
                                                             "Nov",
                                                             "Dec"))
Names_var <- c(
  'SL'="SL (mm)",
  'TW'="TW (g)",
  'HSI'="HSI",
  'K'="K",
  'RI'="RI")

#reorder plots
DataCondLong$facetOrder = factor(DataCondLong$CondVar, levels = c("SL",
                                                                "TW",
                                                                "HSI",
                                                                "K",
                                                                "RI"))  
#----------------------------- Adults~ Month ----------------------------------------#
#load("SuppData.RData")
#ADULTS
CondVAr_Month<-ggplot(DataCondLong, aes(x=Month_, y=CondValues, fill=Region)) + 
  geom_boxplot() +
  #stat_summary(fun=mean, geom="point", shape=20, size=4.5, color="red", fill="red")+
  scale_fill_manual(values = c("white", "gray55"),
                    labels = c("Ubatuba (n= 2860)", "Caraguatatuba (n= 3133)"))+
  ylab("")+
  xlab("")+
  theme(axis.text=element_text(size=12),
        legend.key=element_blank(), 
        axis.text.x = element_text(colour = "black", size = 12, face = "plain", angle = 360, vjust = 1, hjust = 0.5), 
        axis.text.y = element_text(colour = "black", face = "plain", size = 10), 
        legend.text = element_text(size = 10, face ="plain", colour ="black"), 
        legend.title = element_text(size = 10, face = "plain"), panel.background = element_blank(), 
        panel.border = element_rect(colour = "black", fill = NA, size = 0.5), 
        legend.position = "top", panel.grid.major.y = element_line(colour = "grey93"),
        panel.grid.minor.y = element_line(colour = "grey93"),
        strip.text = element_text(size = 12)) +  
  facet_grid(facetOrder ~ ., scale="free",labeller = as_labeller(Names_var)) +
  #facet_wrap(~facetOrder, scale="free", ncol = 2,labeller = as_labeller(Names_var))+
  theme(legend.position = "top",
        legend.background = element_rect(fill = NA, color = NA),
        legend.key = element_rect(fill = NA, color = NA),
        legend.key.size = unit(0.7, "cm"),
        legend.direction = "horizontal")+
  guides(fill=guide_legend(""))+ # legend title
  guides(fill=guide_legend(""))+# legend title
  coord_capped_cart(bottom='both', left='both')+
  theme_bw() + 
  theme(panel.border=element_blank(), axis.line=element_line(),
        legend.position = "top", #c(0.89, 0.96),
        legend.background = element_rect(fill = NA, color = NA),
        legend.key = element_rect(fill = NA, color = NA),
        legend.key.size = unit(0.7, "cm"))

CondVAr_Month

ggsave(filename = "./Figures/CondVAr_Month_All.png", 
       plot = CondVAr_Month,
       units = "cm", width = 15, height = 15, dpi = 600)

#----------------------------- Juveniles~ Month ----------------------------------------#
CondIndJuv<-CondInd %>% filter(str_detect(Sex, "Juveniles"))
summary(CondIndJuv)
str(CondIndJuv)

CondIndJuv<-CondIndJuv[,c("Region","Month_","Season","Trans",
                      "SL","TW","HSI","K","RI")]# Filtering


DataCondLongJuv<-pivot_longer(CondIndJuv, -c(Region,Month_,Trans,Season), 
                            values_to = "CondValues", names_to = "CondVar")
DataCondLongJuv
str(DataCondLongJuv)
DataCondLongJuv<-transform(DataCondLongJuv, Region = as.factor(Region),
                        Month_ = as.factor(Month_),
                        Season = as.factor(Season),
                        Trans = as.factor(Trans),
                        CondVar = as.factor(CondVar),
                        CondValues = as.numeric(CondValues))



DataCondLongJuv$Month_ <- factor(DataCondLongJuv$Month_ , levels = c("Jan",
                                                               "Feb",
                                                               "Mar",
                                                               "Apr",
                                                               "May",
                                                               "Jun",
                                                               "Jul",
                                                               "Aug",
                                                               "Sep",
                                                               "Oct",
                                                               "Nov",
                                                               "Dec"))
Names_var <- c(
  'SL'="SL (mm)",
  'TW'="TW (g)",
  'HSI'="HSI",
  'K'="K",
  'RI'="RI")

#reorder plots
DataCondLongJuv$facetOrder = factor(DataCondLongJuv$CondVar, levels = c("SL",
                                                                  "TW",
                                                                  "HSI",
                                                                  "K",
                                                                  "RI")) 

CondVAr_Month_Juv<-ggplot(DataCondLongJuv, aes(x=Month_, y=CondValues, fill=Region)) + 
  geom_boxplot() +
  #stat_summary(fun=mean, geom="point", shape=20, size=4.5, color="red", fill="red")+
  scale_fill_manual(values = c("white", "gray55"),
                    labels = c("Ubatuba (n= 436)", "Caraguatatuba (n= 370)"))+
  ylab("")+
  xlab("")+
  theme(axis.text=element_text(size=12),
        legend.key=element_blank(), 
        axis.text.x = element_text(colour = "black", size = 12, face = "plain", angle = 360, vjust = 1, hjust = 0.5), 
        axis.text.y = element_text(colour = "black", face = "plain", size = 10), 
        legend.text = element_text(size = 10, face ="plain", colour ="black"), 
        legend.title = element_text(size = 10, face = "plain"), panel.background = element_blank(), 
        panel.border = element_rect(colour = "black", fill = NA, size = 0.5), 
        legend.position = "top", panel.grid.major.y = element_line(colour = "grey93"),
        panel.grid.minor.y = element_line(colour = "grey93"),
        strip.text = element_text(size = 12)) +  
  facet_grid(facetOrder ~ ., scale="free",labeller = as_labeller(Names_var)) +
  #facet_wrap(~facetOrder, scale="free", ncol = 2,labeller = as_labeller(Names_var))+
  theme(legend.position = "top",
        legend.background = element_rect(fill = NA, color = NA),
        legend.key = element_rect(fill = NA, color = NA),
        legend.key.size = unit(0.7, "cm"),
        legend.direction = "horizontal")+
  guides(fill=guide_legend(""))+ # legend title
  guides(fill=guide_legend(""))+# legend title
  coord_capped_cart(bottom='both', left='both')+
  theme_bw() + 
  theme(panel.border=element_blank(), axis.line=element_line(),
        legend.position = "top", #c(0.89, 0.96),
        legend.background = element_rect(fill = NA, color = NA),
        legend.key = element_rect(fill = NA, color = NA),
        legend.key.size = unit(0.7, "cm"))

CondVAr_Month_Juv

ggsave(filename = "./Figures/CondVAr_Month_Juv.png", 
       plot = CondVAr_Month,
       units = "cm", width = 15, height = 15, dpi = 600)

#----------------------------- ~ Depth ----------------------------------------#
#load("SuppData.RData")

CondVAr_Depth<-ggplot(DataCondLong, aes(x=Trans, y=CondValues, fill=Region)) + 
  geom_boxplot() +
  scale_fill_manual(values = c("white", "gray55"),
                    labels = c("Ubatuba (n= 2860)", "Caraguatatuba (n= 3133)"))+
  ylab("Value")+
  xlab("Month")+
  theme(axis.text=element_text(size=12),
        legend.key=element_blank(), 
        axis.text.x = element_text(colour = "black", size = 12, face = "plain", angle = 360, vjust = 1, hjust = 0.5), 
        axis.text.y = element_text(colour = "black", face = "plain", size = 10), 
        legend.text = element_text(size = 10, face ="plain", colour ="black"), 
        legend.title = element_text(size = 10, face = "plain"), panel.background = element_blank(), 
        panel.border = element_rect(colour = "black", fill = NA, size = 0.5), 
        legend.position = "top", panel.grid.major.y = element_line(colour = "grey93"),
        panel.grid.minor.y = element_line(colour = "grey93"),
        strip.text = element_text(size = 12)) +  
  facet_grid(facetOrder ~ ., scale="free",labeller = as_labeller(Names_var)) +
  theme(legend.position = "top",
        legend.background = element_rect(fill = NA, color = NA),
        legend.key = element_rect(fill = NA, color = NA),
        legend.key.size = unit(0.7, "cm"),
        legend.direction = "horizontal")+
  guides(fill=guide_legend(""))+ # legend title
  guides(fill=guide_legend(""))+# legend title
  coord_capped_cart(bottom='both', left='both')+
  theme_bw() + 
  theme(panel.border=element_blank(), axis.line=element_line(),
        legend.position = "top",#c(0.89, 0.96),
        legend.background = element_rect(fill = NA, color = NA),
        legend.key = element_rect(fill = NA, color = NA),
        legend.key.size = unit(0.7, "cm"))

CondVAr_Depth

ggsave(filename = "./Figures/CondVAr_Depth.png", 
       plot = CondVAr_Depth,
       units = "cm", width = 15, height = 15, dpi = 600)

#---------------------------    / /     ---------------------------------------#

################################################################################
######################   Juveniles ~ Month + Depth   ##########################
library(ggplot2)
library(tidyr)
library(dplyr)
library (lemon)

setwd("~/efc/2021_SUBMITTED_Biological factors as proxies of/2021_SUBMITTED_J Sea Research/Script_Figuras")
JuvDat<-read.csv("Size_index.csv",dec=".",sep=";",header=T)
attach(JuvDat)
str(JuvDat)
JuvDat1<-JuvDat[,c("Region","Month_","Trans","Sex",
                     "SL", "N_total")]# Filtering

JuvDat1<-transform(JuvDat1, Region = as.factor(Region),
                    Month_ = as.factor(Month_),
                    Trans = as.factor(Trans),
                    Sex = as.factor(Sex),
                    SL = as.numeric(SL),
                    N_total = as.numeric(N_total))

str(JuvDat1)
summary(JuvDat1)

JuvDat2<-JuvDat1 %>% 
        group_by (Region, Month_, Sex) %>% 
        summarise(n= n())

Juv_wideFrq<-JuvDat2 %>% 
          pivot_wider(values_from = "n", names_from = "Sex") %>% 
          replace_na(list(Juveniles = 0)) %>% 
          mutate(FrqAdults=(Adults*100)/(Adults+Juveniles)) %>% 
          mutate(FrqJuveniles=(Juveniles*100)/(Adults+Juveniles)) %>% 
          mutate(Teste=(FrqAdults+FrqJuveniles))
Juv_wideFrq

SexLong<-pivot_longer(Juv_wideFrq[,c(-3,-4,-7)], -c(Region,Month_), 
                           values_to = "SexValues", names_to = "SexVar")
SexLong

SexLong$Month_ <- factor(SexLong$Month_ , levels = c("Jan",
                                                               "Feb",
                                                               "Mar",
                                                               "Apr",
                                                               "May",
                                                               "Jun",
                                                               "Jul",
                                                               "Aug",
                                                               "Sep",
                                                               "Oct",
                                                               "Nov",
                                                               "Dec"))
Names_var <- c(
  'UBA'="Ubatuba",
  'CAR'="Caraguatatuba")

#reorder plots
SexLong$facetJuv = factor(SexLong$Region, levels = c("UBA",
                                                    "CAR"))
#----------------------------- FR ~ Month -------------------------------------#
load("SuppData.RData")
FR_Juv<-ggplot(SexLong, aes(x = Month_, y = SexValues, fill = SexVar)) +
  geom_bar(stat="identity") +
  scale_fill_manual(values = c("gray75", "black"),name = "",
                   labels = c("Adults (n= 5187)", "Juveniles (n= 806)"))+
  ylab("Frequency (%)")+
  xlab("Month")+
  theme(axis.text=element_text(size=12),
        legend.key=element_blank(), 
        axis.text.x = element_text(colour = "black", size = 12, face = "plain", angle = 360, vjust = 1, hjust = 0.5), 
        axis.text.y = element_text(colour = "black", face = "plain", size = 10), 
        legend.text = element_text(size = 10, face ="plain", colour ="black"), 
        legend.title = element_text(size = 10, face = "plain"),
        panel.background = element_blank(), 
        panel.border = element_rect(colour = "black", fill = NA, size = 1.2), 
        legend.position = "top", panel.grid.major.y = element_line(colour = "grey93"),
        panel.grid.minor.y = element_line(colour = "grey93"),
        strip.text = element_text(size = 12)) +  
facet_grid(facetJuv ~ ., scale="free",labeller = as_labeller(Names_var)) +
coord_capped_cart(bottom='both', left='both')+
theme_bw() + 
theme(panel.border=element_blank(), axis.line=element_line(),
        legend.position = "top",#c(0.89, 0.96),
        legend.background = element_rect(fill = NA, color = NA),
        legend.key = element_rect(fill = NA, color = NA),
        legend.key.size = unit(0.7, "cm"))

FR_Juv

ggsave(filename = "./Figures/FR_Juv.png", 
       plot = FR_Juv,
       units = "cm", width = 15, height = 15, dpi = 600)

#----------------------------- SL ~ Month -------------------------------------#
load("SuppData.RData")
setwd("~/efc/2021_SUBMITTED_Biological factors as proxies of/2021_SUBMITTED_J Sea Research/Script_Figuras")
JuvDat<-read.csv("Size_index.csv",dec=".",sep=";",header=T)
attach(JuvDat)
str(JuvDat)
JuvDat1<-JuvDat[,c("Region","Month_","Trans","Sex",
                   "SL", "N_total")]# Filtering

JuvDat1<-transform(JuvDat1, Region = as.factor(Region),
                   Month_ = as.factor(Month_),
                   Trans = as.factor(Trans),
                   Sex = as.factor(Sex),
                   SL = as.numeric(SL),
                   N_total = as.numeric(N_total))

str(JuvDat1)
summary(JuvDat1)

JuvDat1$Month_ <- factor(JuvDat1$Month_ , levels = c("Jan",
                                                     "Feb",
                                                     "Mar",
                                                     "Apr",
                                                     "May",
                                                     "Jun",
                                                     "Jul",
                                                     "Aug",
                                                     "Sep",
                                                     "Oct",
                                                     "Nov",
                                                     "Dec"))

SL_Month<-ggplot(JuvDat1, aes(x=SL, fill=Sex)) + 
  geom_histogram(alpha = 0.5, position = "identity",bins = 30) +
  scale_fill_manual(values = c("gray55", "black"),
                    labels = c("Adults (n= 5187)", "Juveniles (n= 806)"))+
  ylab("Absolute frequency")+
  xlab("Standard length (mm)")+
  theme(axis.text=element_text(size=12),
        legend.key=element_blank(), 
        axis.text.x = element_text(colour = "black", size = 8, face = "plain",
                                   angle = 90, vjust = 1, hjust = 0.5), 
        axis.text.y = element_text(colour = "black", face = "plain", size = 8), 
        legend.text = element_text(size = 10, face ="plain", colour ="black"), 
        legend.title = element_text(size = 10, face = "plain"), 
                                  panel.background = element_blank(), 
        panel.border = element_rect(colour = "black", fill = NA, size = 0.5), 
        legend.position = "top", panel.grid.major.y = element_line(colour = "grey93"),
        panel.grid.minor.y = element_line(colour = "grey93"),
        strip.text = element_text(size = 10)) +  
  facet_grid(Region ~ Month_, scale="free") +
  theme(legend.position = "top",
        legend.background = element_rect(fill = NA, color = NA),
        legend.key = element_rect(fill = NA, color = NA),
        legend.key.size = unit(0.7, "cm"),
        legend.direction = "horizontal")+
  guides(fill=guide_legend(""))+ # legend title
  guides(fill=guide_legend(""))+# legend title
  coord_capped_cart(bottom='both', left='both')+
  #theme_bw() + 
  theme(panel.border=element_blank(), axis.line=element_line(),
        legend.position = "top", #c(0.89, 0.96),
        legend.background = element_rect(fill = NA, color = NA),
        legend.key = element_rect(fill = NA, color = NA),
        legend.key.size = unit(0.7, "cm"))

SL_Month

ggsave(filename = "./Figures/SL_Month.png", 
       plot = SL_Month,
       units = "cm", width = 18, height = 10, dpi = 600)

#--------------------- Boxplot SL ~ Month -------------------------------------#
load("SuppData.RData")

BoxplotSL_Month<-ggplot(JuvDat1, aes(x=Month_, y=SL, fill=Sex)) + 
  geom_boxplot() +
  scale_fill_manual(values = c("white", "gray55"),name="",
                    labels = c("Adults (n= 5187)", "Juveniles (n= 806)"))+
  ylab("Standard length (mm)")+
  xlab("Month")+
  theme(axis.text=element_text(size=12),
        legend.key=element_blank(), 
        axis.text.x = element_text(colour = "black", size = 12, face = "plain", angle = 360, vjust = 1, hjust = 0.5), 
        axis.text.y = element_text(colour = "black", face = "plain", size = 10), 
        legend.text = element_text(size = 10, face ="plain", colour ="black"), 
        legend.title = element_text(size = 10, face = "plain"), panel.background = element_blank(), 
        panel.border = element_rect(colour = "black", fill = NA, size = 0.5), 
        legend.position = "top", panel.grid.major.y = element_line(colour = "grey93"),
        panel.grid.minor.y = element_line(colour = "grey93"),
        strip.text = element_text(size = 12)) +  
  facet_grid(Region ~ ., scale="free",labeller = as_labeller(Names_var))+
  theme(legend.position = "top",
      legend.background = element_rect(fill = NA, color = NA),
      legend.key = element_rect(fill = NA, color = NA),
      legend.key.size = unit(0.7, "cm"),
      legend.direction = "horizontal")+
  guides(fill=guide_legend(""))+ # legend title
  guides(fill=guide_legend(""))+# legend title
  coord_capped_cart(bottom='both', left='both')+
  theme(panel.border=element_blank(), axis.line=element_line(),
        legend.position = "top", #c(0.89, 0.96),
        legend.background = element_rect(fill = NA, color = NA),
        legend.key = element_rect(fill = NA, color = NA),
        legend.key.size = unit(0.7, "cm"))
BoxplotSL_Month 

ggsave(filename = "./Figures/BoxplotSL_Month.png", 
       plot = BoxplotSL_Month,
       units = "cm", width = 15, height = 15, dpi = 600)

#---------------------------    / /     ---------------------------------------#

save(JuvDat1,DataBioLong, DataCondLong,SexLong, file="SuppData.RData")
load("SuppData.RData")

################################################################################
######################   Juveniles ~ Month + Depth   ##########################

library(tidyr)
library(dplyr)
setwd("~/efc/2021_SUBMITTED_Biological factors as proxies of/2021_SUBMITTED_J Sea Research/Script_Figuras")
AbioF<-read.csv("Abio_updated.csv",dec=".",sep=";",header=T)
attach(AbioF)
str(AbioF)
EnvVar<-AbioF[,c("Region","Month","Depth",
                   "BT", "BS")]# Filtering
str(EnvVar)

EnvVar<-transform(EnvVar, Month = as.factor(Month))
EnvVar<-transform(EnvVar, Region = as.factor(Region))
str(EnvVar)

EnvVar$Month <- factor(EnvVar$Month , levels = c("Jan",
                                                     "Feb",
                                                     "Mar",
                                                     "Apr",
                                                     "May",
                                                     "Jun",
                                                     "Jul",
                                                     "Aug",
                                                     "Sep",
                                                     "Oct",
                                                     "Nov",
                                                     "Dec"))
TempAbio<-ggplot(EnvVar, aes(x=Month, y=BT, fill=Region)) + 
  geom_boxplot() +
  #stat_summary(fun="mean", color="white", shape=15)+
  scale_fill_manual(values = c("white", "gray75"))+
  ylab("Temperature (ºC)")+
  xlab("Month")+
  theme(axis.text=element_text(size=12),
        legend.key=element_blank(), 
        axis.text.x = element_text(colour = "black", size = 12, face = "plain", angle = 360, vjust = 1, hjust = 0.5), 
        axis.text.y = element_text(colour = "black", face = "plain", size = 10), 
        legend.text = element_text(size = 10, face ="bold", colour ="black"), 
        legend.title = element_text(size = 11, face = "bold"), panel.background = element_blank(), 
        panel.border = element_rect(colour = "black", fill = NA, size = 1.2), 
        legend.position = "top", panel.grid.major.y = element_line(colour = "grey93"),
        panel.grid.minor.y = element_line(colour = "grey93"),
        strip.text = element_text(size = 12))  
TempAbio

ggsave(filename = "./Figures/TempAbio.png", 
       plot = TempAbio,
       units = "cm", width = 15, height = 21, dpi = 600)

SalAbio<-ggplot(EnvVar , aes(x=Month, y=BS, fill=Region)) + 
  geom_boxplot() +
  #stat_summary(fun="mean", color="white", shape=15)+
  scale_fill_manual(values = c("white", "gray75"))+
  ylab("Salinity")+
  xlab("Month")+
  theme(axis.text=element_text(size=12),
        legend.key=element_blank(), 
        axis.text.x = element_text(colour = "black", size = 12, face = "plain", angle = 360, vjust = 1, hjust = 0.5), 
        axis.text.y = element_text(colour = "black", face = "plain", size = 10), 
        legend.text = element_text(size = 10, face ="bold", colour ="black"), 
        legend.title = element_text(size = 11, face = "bold"), panel.background = element_blank(), 
        panel.border = element_rect(colour = "black", fill = NA, size = 1.2), 
        legend.position = "top", panel.grid.major.y = element_line(colour = "grey93"),
        panel.grid.minor.y = element_line(colour = "grey93"),
        strip.text = element_text(size = 12))  
SalAbio

ggsave(filename = "./Figures/SalAbio.png", 
       plot = SalAbio,
       units = "cm", width = 15, height = 21, dpi = 600)


#--------------------------------------------------------

#UBA
tiff("Boxplot_UBA.tiff", width = 6, height = 5.5,units = 'in', res=600)
par(no.readonly = TRUE)
par(mfrow = c(3,2))
par(mar = c(3.4,4.5,0,0))
par(mgp = c(2.3,0.6,0))#mexe so no eixo label 
layout.show(6)

boxplot(N_total~Month,ylab="",xlab="",las=1,data=SubUba)
mtext(side = 2, text = "Number of individuals", line = 3,cex=0.8)
boxplot(N_total~Transec,ylab="",xlab="",las=1,data=SubUba)
boxplot(DensT~Month,ylab="",xlab="",las=1,data=SubUba)
mtext(side = 2, text = "Density (fish/m²) x 1000", line = 3,cex=0.8)
boxplot(DensT~Transec,ylab="",xlab="",las=1,data=SubUba)
boxplot(BiomassT~Month,ylab="",xlab="Month",las=1,data=SubUba,cex.lab=1.2)
mtext(side = 2, text = "Total biomass (g)", line = 3,cex=0.8)
boxplot(BiomassT~Transec,ylab="",xlab="Depth (m)",las=1,data=SubUba,cex.lab=1.2)

dev.off()

#CAR
tiff("Boxplot_CAR.tiff", width = 6, height = 5.5,units = 'in', res=600)
par(no.readonly = TRUE)
par(mfrow = c(3,2))
par(mar = c(3.4,4.5,0,0))
par(mgp = c(2.3,0.6,0))#mexe so no eixo label 
layout.show(6)

boxplot(N_total~Month,ylab="",xlab="",las=1,data=SubCar)
mtext(side = 2, text = "Number of individuals", line = 3,cex=0.8)
boxplot(N_total~Transec,ylab="",xlab="",las=1,data=SubCar)
boxplot(DensT~Month,ylab="",xlab="",las=1,data=SubCar)
mtext(side = 2, text = "Density (fish/m²) x 1000", line = 3,cex=0.8)
boxplot(DensT~Transec,ylab="",xlab="",las=1,data=SubCar)
boxplot(BiomassT~Month,ylab="",xlab="Month",las=1,data=SubCar,cex.lab=1.2)
mtext(side = 2, text = "Total biomass (g)", line = 3,cex=0.8)
boxplot(BiomassT~Transec,ylab="",xlab="Depth (m)",las=1,data=SubCar,cex.lab=1.2)

dev.off()

rm(SubUba,SubCar)

####################################### /  / ######################################
#################################### HIST Size and indices ########################
###################################################################################
setwd("~/EUDRIANO FILES/Futuros manuscritos e resumos/2018_2019_Writting_GAMLSS Manuscript/Script_Figuras")
Indices_T<-read.csv("Size_index.csv",dec=".",sep=";",header=T)
attach(Indices_T)
head(Indices_T)
SubUbaInd<-Indices_T[1:2860,c("Region","Trans","Month","Sexrat","TL","SL","TW","HSI","K","RI")]
SubCarInd<-Indices_T[2861:5994,c("Region","Trans","Month","Sexrat","TL","SL","TW","HSI","K","RI")]

tiff("Indices_Month.tiff", width = 6, height = 5.5,units = 'in', res=600)
#dev.new(width=3, height=5, unit="in")#abre janela para trabalhar o grafico
par(mfrow = c(5,2),
    oma = c(5,4,0,0) + 0.1,
    mar = c(0,0,1,1) + 0.7,
    mgp = c(2.3,0.6,0))
layout.show(10)



#Uba                      Month
boxplot(TL~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubUbaInd,cex.lab=1.2)
axis(side = 1, at = Month, labels = FALSE, tck = NA)
mtext(side = 2, text = "TL (mm)", line = 3,cex=0.6)
boxplot(TL~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubCarInd,cex.lab=1.2)
mtext(side = 2, text = "", line = 3,cex=0.6)
axis(side = 1, at = Month, labels = FALSE, tck = NA)
boxplot(TW~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubUbaInd,cex.lab=1.2)
mtext(side = 2, text = "TW (g)", line = 3,cex=0.6)
axis(side = 1, at = Month, labels = FALSE, tck = NA)
boxplot(TW~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubCarInd,cex.lab=1.2)
mtext(side = 2, text = "", line = 3,cex=0.6)
axis(side = 1, at = Month, labels = FALSE, tck = NA)
boxplot(HSI~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubUbaInd,cex.lab=1.2)
mtext(side = 2, text = "HSI", line = 3,cex=0.6)
axis(side = 1, at = Month, labels = FALSE, tck = NA)
boxplot(HSI~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubCarInd,cex.lab=1.2)
mtext(side = 2, text = "", line = 3,cex=0.6)
axis(side = 1, at = Month, labels = FALSE, tck = NA)
boxplot(K~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubUbaInd,cex.lab=1.2)
mtext(side = 2, text = "K", line = 3,cex=0.6)
axis(side = 1, at = Month, labels = FALSE, tck = NA)
boxplot(K~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubCarInd,cex.lab=1.2)
mtext(side = 2, text = "", line = 3,cex=0.6)
axis(side = 1, at = Month, labels = FALSE, tck = NA)
boxplot(RI~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubUbaInd,cex.lab=1.2)
mtext(side = 2, text = "RI", line = 3,cex=0.6)
axis(side = 1, at = Month, labels = FALSE, tck = NA)
boxplot(RI~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubCarInd,cex.lab=1.2)
mtext(side = 3, text = "", line = 3,cex=0.6)
axis(side = 1, at = Month, labels = FALSE, tck = NA)

dev.off()

#Uba and CAR                  Tansect
tiff("Indices_Transect.tiff", width = 6, height = 5.5,units = 'in', res=600)
par(mfrow = c(5,2),
    oma = c(5,4,0,0) + 0.1,
    mar = c(0,0,1,1) + 0.7,
    mgp = c(2.3,0.6,0))
layout.show(10)

boxplot(TL~Trans,ylab="",xlab="",las=1,data=SubUbaInd,cex.lab=1.2)
mtext(side = 2, text = "TL (mm)", line = 3,cex=0.6)
boxplot(TL~Trans,ylab="",xlab="",las=1,data=SubCarInd,cex.lab=1.2)
mtext(side = 2, text = "", line = 3,cex=0.6)
boxplot(TW~Trans,ylab="",xlab="",las=1,data=SubUbaInd,cex.lab=1.2)
mtext(side = 2, text = "TW (g)", line = 3,cex=0.6)
boxplot(TW~Trans,ylab="",xlab="",las=1,data=SubCarInd,cex.lab=1.2)
mtext(side = 2, text = "", line = 3,cex=0.6)
boxplot(HSI~Trans,ylab="",xlab="",las=1,data=SubUbaInd,cex.lab=1.2)
mtext(side = 2, text = "HSI", line = 3,cex=0.6)
boxplot(HSI~Trans,ylab="",xlab="",las=1,data=SubCarInd,cex.lab=1.2)
mtext(side = 2, text = "", line = 3,cex=0.6)
boxplot(K~Trans,ylab="",xlab="",las=1,data=SubUbaInd,cex.lab=1.2)
mtext(side = 2, text = "K", line = 3,cex=0.6)
boxplot(K~Trans,ylab="",xlab="",las=1,data=SubCarInd,cex.lab=1.2)
mtext(side = 2, text = "", line = 3,cex=0.6)
boxplot(RI~Trans,ylab="",xlab="Trans",las=1,data=SubUbaInd,cex.lab=1.2)
mtext(side = 2, text = "RI", line = 3,cex=0.6)
boxplot(RI~Trans,ylab="",xlab="",las=1,data=SubCarInd,cex.lab=1.2)
mtext(side = 3, text = "", line = 3,cex=0.6)

dev.off()

######################################## / / ####################################
#### Histograms          
tiff("Histograms2.tiff", width = 6, height = 5.5,units = 'in', res=300)
library(ggpubr)
library(ggplot2)
datasize<-read.csv("Size.csv",dec=".",sep=";",header=T)
attach(datasize)
str(datasize)

Hist_Sexrat<-ggplot(data= datasize, aes(Sexrat)) + 
  geom_histogram(breaks=seq(0, 12, by = 0.5), colour = I("black")) + 
  labs(x = "Sex ratio (Female/male)",y="")
Hist_Sexrat  
Hist_TL<-ggplot(data= datasize, aes(TL)) + 
  geom_histogram(breaks=seq(0, 300, by = 15), colour = I("black"), aes(fill=..count..)) + 
  labs(x = "Total length (mm)",y="")
Hist_TL          
Hist_TW<-ggplot(data= datasize, aes(TW)) + 
  geom_histogram(breaks=seq(0, 200, by = 15), colour = I("black"), aes(fill=..count..)) + 
  labs(x = "Total length (mm)", y="")
Hist_TW   
Hist_HSI<-ggplot(data= datasize, aes(HSI)) + 
  geom_histogram(breaks=seq(0, 1, by =0.08 ), colour = I("black"), aes(fill=..count..)) +
  labs(x = "Hepatosomatic index", y="")
Hist_HSI          
Hist_K<-ggplot(data= datasize, aes(K)) + 
  geom_histogram(breaks=seq(0, 0.3, by =0.013), colour = I("black"), aes(fill=..count..)) +
  labs(x = "Factor Condition ", y="")
Hist_K  
Hist_RI<-ggplot(data= datasize, aes(RI)) + 
  geom_histogram(breaks=seq(0, 20, by =1), colour = I("black"), aes(fill=..count..)) + 
  labs(x = "Repletion index", y="")
Hist_RI 
ggarrange(Hist_Sexrat, Hist_HSI,Hist_K,Hist_RI, ncol = 2, nrow = 3)

dev.off()
rm(datasize)

####################################### /  / ################################
###################################################################################
#################################### Fatores Abioticos ############################
###################################################################################
setwd("~/EUDRIANO FILES/Futuros manuscritos e resumos/2018_2019_Writting_GAMLSS Manuscript/Script_Figuras")
Abio_TS<-read.csv("BT_BS_2018.csv",dec=".",sep=";",header=T)
attach(Abio_TS)
head(Abio_TS)
SubAbioCAR<-Abio_TS[1:252,c("Region","Month_","Month","Transec","BT","BS","Depth")]
SubAbioUBA<-Abio_TS[253:504,c("Region","Month_","Month","Transec","BT","BS","Depth")]

par(mfrow = c(2,4),
    oma = c(5,4,0,0) + 0.1,
    mar = c(0,0,1,1) + 0.7,
    mgp = c(2.3,0.6,0))
layout.show(8)

#Uba                      Month
boxplot(BT~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubAbioUBA,cex.lab=1.2)
axis(side = 1, at = Month, labels = FALSE, tck = NA)
mtext(side = 2, text = "Temperature (°C)", line = 3,cex=0.6)
boxplot(BS~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubAbioUBA,cex.lab=1.2)
axis(side = 1, at = Month, labels = FALSE, tck = NA)
mtext(side = 2, text = "Temperature (°C)", line = 3,cex=0.6)

boxplot(BT~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubAbioCAR,cex.lab=1.2)
axis(side = 1, at = Month, labels = FALSE, tck = NA)
mtext(side = 2, text = "Temperature (°C)", line = 3,cex=0.6)
boxplot(BS~Month,ylab="",xlab="",las=1,xaxt = "n",data=SubAbioCAR,cex.lab=1.2)
axis(side = 1, at = Month, labels = FALSE, tck = NA)
mtext(side = 2, text = "Temperature (°C)", line = 3,cex=0.6)

library(ggplot2)
library(ggpubr)
ggerrorplot(SubAbioCAR, x = "Month", y = "BT", 
            desc_stat = "mean_sd", color = "black",
            add = "violin", add.params = list(color = "darkgray"))

ggerrorplot(SubAbioCAR, x = "Month", y = "BT", 
            desc_stat = "mean_sd", 
            position = position_dodge(0.3)     # Adjust the space between bars
)

ggline(SubAbioCAR, x = "Month", y = "BT", 
       add = c("mean_sd", "jitter"))

ggarrange(Hist_Sexrat, Hist_HSI,Hist_K,Hist_RI, ncol = 2, nrow = 3)



dev.off()


